#!/usr/bin/env node

'use strict'
//假如为服务请求，则直接开启客户端
const isServerBuild = process.argv[2]
if (isServerBuild && isServerBuild == 'server') {
    require('../cloudBuild/client.js')
    return;
}

const webpack = require('webpack')
const hslog = require('../util/hslog.js')
const ProgressBarPlugin = require('progress-bar-webpack-plugin');
const coreHsing = require('../util/core/coreHsing')
const coreParse = require('../util/parse')
const webpackParse = require('../util/webpackParse')

coreParse(coreHsing, function(baseConf) {
    webpackParse(baseConf)

})





// console.log("构建信息:\n" + stats.toString({
//     colors: true
// }) + "\n ***********************")
// console.log(`版本信息（webpack）：${sjson.version}`)
// console.log(`用时（webpack）：${sjson.time}ms`)
//     // console.log(`${JSON.stringify(sjson.assetsByChunkName)}`)

// for (let item in sjson.assetsByChunkName) {

//     chunk.push(...sjson.assetsByChunkName[item]);
// }
// console.log(`${chalk.blue.bold.bgWhite("主文件：")}`)
// for (let item in sjson.assets) {
//     if (chunk.indexOf(sjson.assets[item].name) != -1) {
//         console.log(`${chalk.blue("文件名：")}${sjson.assets[item].name} * 大小：${sjson.assets[item].size} B`);
//     }

// }
// console.log(`${chalk.blue.bold.bgWhite("其它文件：")}`)
// for (let item in sjson.assets) {
//     if (chunk.indexOf(sjson.assets[item].name) != -1) {
//         continue;
//     }
//     console.log(`${chalk.blue("文件名：")}${sjson.assets[item].name} * 大小：${sjson.assets[item].size} B`);
// }