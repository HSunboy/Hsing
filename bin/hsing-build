#!/usr/bin/env node

'use strict'
// const test = require('./logger.js')
const webpack = require('webpack')
const merge = require('../util/merge.js')
const chalk = require('chalk')
const user_path = require('../util/user-path.js')
const hslog = require('../util/hslog.js')
const ProgressBarPlugin = require('progress-bar-webpack-plugin');
const isServerBuild = process.argv[2]
if (isServerBuild && isServerBuild == 'server') {
    require('../cloudBuild/client.js')
    return;
}

merge.plugins.push(new ProgressBarPlugin())
const hsing = webpack(merge);


hsing.run(function(err, stats) {
    // console.log(stats.toJson());
    const sjson = stats.toJson();
    // console.log(sjson.assetsByChunkName);

    if (stats.hasErrors()) {
        hslog.fatal(`错误信息:${sjson.errors}`)
    }

    hslog.wplog({}, sjson, stats.hasWarnings());


    // console.log("构建信息:\n" + stats.toString({
    //     colors: true
    // }) + "\n ***********************")
    // console.log(`版本信息（webpack）：${sjson.version}`)
    // console.log(`用时（webpack）：${sjson.time}ms`)
    //     // console.log(`${JSON.stringify(sjson.assetsByChunkName)}`)

    // for (let item in sjson.assetsByChunkName) {

    //     chunk.push(...sjson.assetsByChunkName[item]);
    // }
    // console.log(`${chalk.blue.bold.bgWhite("主文件：")}`)
    // for (let item in sjson.assets) {
    //     if (chunk.indexOf(sjson.assets[item].name) != -1) {
    //         console.log(`${chalk.blue("文件名：")}${sjson.assets[item].name} * 大小：${sjson.assets[item].size} B`);
    //     }

    // }
    // console.log(`${chalk.blue.bold.bgWhite("其它文件：")}`)
    // for (let item in sjson.assets) {
    //     if (chunk.indexOf(sjson.assets[item].name) != -1) {
    //         continue;
    //     }
    //     console.log(`${chalk.blue("文件名：")}${sjson.assets[item].name} * 大小：${sjson.assets[item].size} B`);
    // }



})